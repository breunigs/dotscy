" Delete all bookmarks when starting up (because I'll manage them manually).
javascript <<EOF
var bms = services.get("bookmarks");
bms.removeFolderChildren(bms.bookmarksMenuFolder);
bms.removeFolderChildren(bms.toolbarFolder);
bms.removeFolderChildren(bms.unfiledBookmarksFolder);
EOF

" Set the default search engine.
set defsearch="g"

" Delete all default search engines when starting up. My own are in searchplugins/ in my profile.
javascript <<EOF
fixSearchEngines = function () {
	var bss = services.get("browserSearch");
	bss.getDefaultEngines({}).forEach(function (engine) { bss.removeEngine(engine); });
	bss.defaultEngine = bss.getEngineByAlias(options.defsearch);
}
EOF

" A builtin is.gd shortener.
javascript <<EOF
shortenURLIsGd = function (url) {
	var req = new XMLHttpRequest();
	req.open("GET", "http://is.gd/api.php?longurl=" + encodeURIComponent(url), true)
	req.onreadystatechange = function (ev) {
		if (req.readyState == 4) {
			if (req.status == 200) {
				util.copyToClipboard(req.responseText, true);
			} else {
				liberator.echo(req.responseText);
			}
		}
	}
	req.send(null);
}
EOF
map <silent> gy :javascript shortenURLIsGd(buffer.URL);<CR>

" XPath shortcuts.
javascript <<EOF
var xpUnordered = function(selector) {
	return content.document.evaluate(selector, content.document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);
}
var xpExists = function(selector) {
	return xpUnordered(selector).snapshotLength > 0;
}
EOF

" On-the-fly CSS class adding based on XPath matches.
javascript <<EOF
var CSSFrickel = function(selector, class) {
	var rows = xpUnordered(selector);
	for (var i = 0; i < rows.snapshotLength; i++) {
		content.document.getElementById(rows.snapshotItem(i).id).className += " " + class;
	}
};
EOF

" Don't warn on about:config.
set! general.warnOnAboutConfig=false

" No close buttons on tabs.
set! browser.tabs.closeButtons=2

" Always display tabs bar, even in fullscreen.
set! browser.tabs.autoHide=false
set! browser.fullscreen.autohide=false

" Allow for smaller and wider tabs.
set! browser.tabs.tabMinWidth=50
set! browser.tabs.tabMaxWidth=4000

" Open in new tabs instead of new windows. Always.
set! browser.link.open_newwindow=3
set! browser.link.open_newwindow.restriction=0

" For the love of God, don't let popups (opened in a tab) resize my whole browser.
set! dom.disable_window_move_resize=true

" No automatic update checks.
" FIXME: This check should be a blacklist, not a whitelist.
javascript <<EOF
doAutomaticUpdates = (navigator.platform.match("Mac") != null);
prefs.set("app.update.enabled", doAutomaticUpdates);
prefs.set("browser.search.update", doAutomaticUpdates);
prefs.set("extensions.update.enabled", doAutomaticUpdates);
prefs.set("extensions.update.notifyUser", doAutomaticUpdates);
EOF

" No prefetching.
set! network.prefetch-next=false

" Homepage, schmomepage.
set! browser.startup.homepage="http://scytale.name/"
set! browser.startup.page=3

" Make backspace go back, control-backspace go forward.
map <BS> :back<CR>
map <C-BS> :forward<CR>

" Make Alt-g and Alt-G do default searches.
execute "map <A-g> :open " + options.defsearch + " "
execute "map <A-G> :tabopen " + options.defsearch + " "

" Show a tab number over the tab icon.
set guioptions=rb

" Hints for input fields use their label, then their name.
set hintinputs=label,name

" Open some things that should open in a new tab in a new tab.
set newtab="all"

" Do not use suggest engines.
set suggestengines=

" Complete awesomely.
set wildmode="list:full"

" Use my own external editor and pass it the current URL.
set editor="scy-firevim-editor ''"
autocmd LocationChange . :set editor="scy-firevim-editor '<url>'"

" When going fullscreen, don't let the scroll bar disappear.
autocmd Fullscreen .* :javascript document.getElementById("status-bar").setAttribute("moz-collapsed", false)

" Ring a visual bell on errors.
set errorbells visualbell

" Style for the status/command bar.
style -name=scyFireVimStatus * #liberator-statusline { font-family: Inconsolata-dz,Inconsolata,monospace; }

" Load a local config file, if it exists.
source! ~/.firevim/rc.local
